#!/bin/sh
## copyright quintard julien
## 
## kaneton
## 
## init
## 
## path          /home/mycure/kaneton
## 
## made by mycure
##         quintard julien   [quinta_j@epita.fr]
## 
## started on    Fri Feb 11 02:58:21 2005   mycure
## last update   Mon Oct 10 18:14:42 2005   mycure
##

# INFORMATIONS
#
# this script has to be run in the directory src/
#
# this script must always be run by the script src/env/init



# CONFIGURATION FILE PATH
#
# the configuration file
CONF="conf/"$USER"/"$USER".conf"



# CONFIGURATION FILE VARIABLES
#
# default globals
DISPLAY="unknown"
ENVIRONMENT="unknown"
ARCHITECTURE="unknwon"



# INSTALL SPECIFIC VARIABLES
#
# generic names for this script
KANETON_MK=".kaneton.mk"



# BINARIES
#
# the list of binaries used to compile the kaneton kernel on
# linux operating systems.
BINARIES="gcc make rm ar ranlib ld nasm ln touch tail wc tar"



# READ CONFIGURATION FILE
#
# function used to read the configuration file and to load
# important variables
read_kaneton_conf()
{
  # display
  DISPLAY=`cat $CONF | grep -E "^_DISPLAY_ = .*$" | cut -b 13-`

  # environment
  ENVIRONMENT=`cat $CONF | grep -E "^_ENVIRONMENT_ = .*$" | cut -b 17-`

  # architecture
  ARCHITECTURE=`cat $CONF | grep -E "^_ARCHITECTURE_ = .*$" | cut -b 18-`
}



# CHECK
#
# checks wheter the binaries used to compile the kaneton kernel are
# present on the system.
check()
{
  display "   checking binaries" "+"

  for i in $BINARIES ; do
    which $i 2> /dev/null > /dev/null
    if [ $? -ne 0 ] ; then
      display "    binary '$i' not present on your system" "!"
    fi
  done
}



# INIT
#
# installs the environment for linux operating system
init()
{
  # makefile dependencies
  GENERIC_KANETON_MK="env/"$ENVIRONMENT"/kaneton.mk"

  # sed
  display "   generating makefile dependencies" "+"

  rm -f $KANETON_MK

  sed s/___kaneton_sed___/$(pwd | sed 's/\//\\\//g')/g $GENERIC_KANETON_MK \
      > $KANETON_MK

  # create the symbolic link for architecture dependencies
  display "   installing links to machine-dependent directories" "+"

  rm -f core/bootstrap/arch/machdep
  rm -f core/bootloader/arch/machdep
  rm -f core/include/arch/machdep
  rm -f core/kaneton/arch/machdep
  rm -f lds/arch/machdep

  ln -s $ARCHITECTURE core/bootstrap/arch/machdep
  ln -s $ARCHITECTURE core/bootloader/arch/machdep
  ln -s $ARCHITECTURE core/include/arch/machdep
  ln -s $ARCHITECTURE core/kaneton/arch/machdep
  ln -s $ARCHITECTURE lds/arch/machdep
}



# PRINT A MESSAGE
#
# prints a message using the user variable DISPLAY
print()
{
  color=$1
  message=$2
  options=$3

  if [ $DISPLAY = "color" ] ; then

    case "$color" in
      "red")
        echo -e $options '\E[;31m'"\033[1m$message\033[0m"
	;;

      "green")
        echo -e $options '\E[;32m'"\033[1m$message\033[0m"
	;;

      "yellow")
        echo -e $options '\E[;33m'"\033[1m$message\033[0m"
	;;

      "blue")
        echo -e $options '\E[;34m'"\033[1m$message\033[0m"
	;;

      "white")
        echo -e $options '\E[;37m'"\033[1m$message\033[0m"
	;;

      *)
	;;
    esac

  else

    echo $options "$message"

  fi
}



# DISPLAY A MESSAGE
#
# displays a message with a header
display()
{
  msg=$1
  header=$2

  case "$header" in
    "+")
      print "blue" "[" "-n"
      print "green" "+" "-n"
      print "blue" "]" "-n"
      ;;

    "!")
      print "blue" "[" "-n"
      print "red" "!" "-n"
      print "blue" "]" "-n"
      ;;

    "?")
      print "blue" "[" "-n"
      print "yellow" "?" "-n"
      print "blue" "]" "-n"
      ;;

    *)
      ;;
  esac

  print "white" "$msg" ""
}



# ENTRY POINT
#
# entry point of this script

# call the read_kaneton_conf function
read_kaneton_conf

# install environment
init

# check the binaries
check
