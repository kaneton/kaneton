#!/bin/sh
## copyright quintard julien
## 
## kaneton
## 
## init
## 
## path          /home/mycure/kaneton
## 
## made by mycure
##         quintard julien   [quinta_j@epita.fr]
## 
## started on    Fri Feb 11 02:58:21 2005   mycure
## last update   Tue Sep  6 00:14:46 2005   mycure
##

# INFORMATIONS
#
# this script has to be run in its directory: src/env/
# or with "make init" in the src/ directory



# CONFIGURATION FILE PATH
#
# the configuration file
CONF="../conf/"$USER"/"$USER".conf"



# CONFIGURATION FILE VARIABLES
#
# default globals
LIBC="unknown"
ENVIRONMENT="unknown"
ARCHITECTURE="unknwon"
MULTIBOOTLOADER="unknown"



# READ CONFIGURATION FILE
#
# function used to read the configuration file and to load
# important variables
read_kaneton_conf()
{
  # libc
  LIBC=`cat $CONF | grep -E "^_LIBC_ = .*$" | cut -b 10-`

  # environment
  ENVIRONMENT=`cat $CONF | grep -E "^_ENVIRONMENT_ = .*$" | cut -b 17-`

  # architecture
  ARCHITECTURE=`cat $CONF | grep -E "^_ARCHITECTURE_ = .*$" | cut -b 18-`

  # multibootloader
  MULTIBOOTLOADER=`cat $CONF | grep -E "^_MULTIBOOTLOADER_ = .*$" | cut -b 21-`
}



# USAGE
#
# this function displays the usage but does not exit
usage()
{
  print " usage: init" "!"
}



# WARNING
#
# this function alerts the user, displaying information and asking to continue
warning()
{
  # display information and ask the user to continue or cancel
  print " your current configuration:" "+"
  print "   libc:                     $LIBC" "+"
  print "   environment:              $ENVIRONMENT" "+"
  print "   architecture:             $ARCHITECTURE" "+"
  print "   multibootloader:          $MULTIBOOTLOADER" "+"
  print ""
  print " to cancel press CTRL^C, otherwise press enter" "?"

  NEEDLESS=""
  read NEEDLESS
}



# ENVIRONMENTS
#
# this function displays the supported environments
environments()
{
  list=""

  directory=`ls env`

  for i in env/$directory ; do
    if [ -d env/$i ] ; then
      list="$list $i"
    fi
  done

  print " supported environments are:$list" "!"
}



# INIT
#
# this function installs the environment, calling the script depending
# of your operating system
init()
{
  if [ ! -d env/$ENVIRONMENT ] ; then
    print " unknown system: $ENVIRONMENT" "!"
    print ""
    print " please check your ENVIRONMENT variable in $CONF" "!"
    print ""
    environments
    print ""
    usage
    exit
  fi

  if [ ! -e env/$ENVIRONMENT/init ] ; then
    print " unknown system: $ENVIRONMENT" "!"
    print ""
    print " please check your ENVIRONMENT variable in $CONF" "!"
    print ""
    environments
    print ""
    usage
    exit
  fi

  ./env/$ENVIRONMENT/init
}



# CONFIGURATION
#
# this function links the kernel configuration files.
conf()
{
  print " linking kernel configuration files" "+"

  rm -f core/kaneton/conf/conf.c
  rm -f core/include/kaneton/conf.h

  ln -s ../../../conf/$USER/conf.c core/kaneton/conf/conf.c
  ln -s ../../../conf/$USER/conf.h core/include/kaneton/conf.h
}



# DEPENDENCIES
#
# this function generates C files dependencies.
dep()
{
  print " reinitialising of makefile dependencies" "+"

  makefiles=`find ./ -name .makefile.mk`

  for m in $makefiles ; do
    echo -n "" > $m
  done
}



# PRINT A MESSAGE
#
# print a message with a header
print()
{
  msg=$1
  header=$2

  case "$header" in
    "+")
      echo -n -e '\E[;34m'"\033[1m[\033[0m"
      echo -n -e '\E[;32m'"\033[1m+\033[0m"
      echo -n -e '\E[;34m'"\033[1m]\033[0m"
      ;;

    "!")
      echo -n -e '\E[;34m'"\033[1m[\033[0m"
      echo -n -e '\E[;31m'"\033[1m!\033[0m"
      echo -n -e '\E[;34m'"\033[1m]\033[0m"
      ;;

    "?")
      echo -n -e '\E[;34m'"\033[1m[\033[0m"
      echo -n -e '\E[;33m'"\033[1m\033[5m?\033[0m\033[0m"
      echo -n -e '\E[;34m'"\033[1m]\033[0m"
      ;;

    *)
      ;;
  esac

  echo -e "\033[1m$msg\033[0m"
  tput sgr0
}



# ENTRY POINT
#
# entry point of this script

# start of installation

print " installing environment" "+"
print ""

# call the read_kaneton_conf function
read_kaneton_conf

# call the warning function
warning

# go into the src/ directory
cd ../

# install environment
init

# link kernel configuration
conf

# generate the files dependencies
dep

# return into the env/ directory
cd env/

# end of installation
print " environment installed successfully" "+"
