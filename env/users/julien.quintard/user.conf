## copyright quintard julien
##
## kaneton
##
## user.conf
##
## path          /home/mycure/kaneton/view
##
## made by mycure
##         quintard julien   [quinta_j@epita.fr]
##
## started on    Fri Feb 11 02:18:00 2005   mycure
## last update   Tue Nov  8 14:08:29 2005   mycure
##

#
# ---------- information ------------------------------------------------------
#
# this file contains every user variables.
#
# note that this file will always be included after the machine one.
# so using the makefile syntax you are allowed to override some machine
# specific variables.
#
# this file uses the makefile syntax.
#

#
# ---------- variables --------------------------------------------------------
#

#
# _DISPLAY_
#
# specify the display method.
#
# examples:
#
#   color
#   non-color
#

_DISPLAY_		:=		color

#
# _EXPORT_
#
# specify the name of the tarball used to export kaneton.
#

_EXPORT_		:=		kaneton

#
# _HIDDEN_
#
# specify the directories to hide from the export distribution.
#
# be careful, set here ONLY relative path, NEVER absolute ones and NEVER
# makefile paths like $(_CONF_DIR_).
#
# examples:
#
#   view
#
# bad ideas:
#
#   $(_CORE_DIR_)
#

_HIDDEN_		:=		view

#
# _C_FLAGS_
#
# specify additional c flags.
#

_C_FLAGS_		:=		

#
# _LD_FLAGS_
#
# specify additional ld flags.
#

_LD_FLAGS_		:=		

#
# _CPP_FLAGS_
#
# specify additional cpp flags.
#

_CPP_FLAGS_		:=		

#
# _MAKE_FLAGS_
#
# specify additional make flags.
#

_MAKE_FLAGS_		:=		

#
# _KANETON_FLAGS_
#
# specify the kaneton flags. this variable is very useful to activate
# source code parts for this precise user.
#
# examples:
#
#   -DMY_SCSI_DRIVER -DMY_VALUE=42
#   etc..
#

_KANETON_FLAGS_		:=		

#
# _ADDRESS_
#
# address of your client machine using tftp server. this field is needless
# whether you do not want to use tftp boot system.
#
# examples:
#
#   192.168.0.42
#   etc..
#

_ADDRESS_		:=		

#
# _TFTP_ADDRESS_
#
# address of the tftp server. this value is needless whether you do not
# want to use tftp boot system.
#
# examples:
#
#   192.168.0.2
#   etc..
#

_TFTP_ADDRESS_		:=		

#
# _TFTP_DIRECTORY_
#
# specify the tftp directory used to store modules.
#
# examples:
#
#   /modules/
#   etc..
#

_TFTP_DIRECTORY_	:=		

#
# _MACHINE_
#
# development environment: unix, linux, bsd, macos etc.. this value is used
# by the init and clean scripts in the env/ directory.
#
# the syntax is:
#
#   [operating system source - architecture source . architecture destination]
#
# examples:
#
#   freebsd-ia32.powerpc
#   solaris-sparc.powerpc
#   etc..
#
# if there is no source and destination, this means that the source and
# destination will be identical. this case is the common one when for
# example compiling kaneton for the ia32 architecture on a linux-ia32
# operating system.
#
# examples:
#
#   unix
#   etc..
#

_MACHINE_		:=		unix

#
# _ARCHITECTURE_
#
# defines the target architecture for running your kernel.
#
# examples:
#
#   ia-32
#   sparc
#   etc..
#
# this field must be identical to the last part of the _MACHINE_ variable
# defining the target architecture.
#

_ARCHITECTURE_		:=		ia32

#
# _MBL_
#
# specify the multi-bootloader to use to boot the kaneton microkernel.
#
# examples:
#
#   lilo
#   grub
#   etc..
#

_MBL_			:=		grub

#
# _BOOTMODE_
#
# specify the boot mode to use.
#
# examples:
#   floppy
#   tftp
#   floppy-image
#   hard-drive
#   etc..
#
# following are the variable dependencies:
#
#   floppy:		_DEVICE_
#   tftp:		_DEVICE_
#   floppy-image:	_IMAGE_
#   etc..
#
# the file system used on the device is FAT which implies using mtools.
#

_BOOTMODE_		:=		floppy-image

#
# _UDEVICE_
#
# specify the unix device to use.
#
# examples:
#
#   /dev/fd0
#   etc..
#

_UDEVICE_		:=		/dev/fd0

#
# _MDEVICE_
#
# specify the mtools device to use.
#
# examples:
#
#   a:
#   etc..
#

_MDEVICE_		:=		a:

#
# _IMAGE_
#
# specify the image used to simulate a device, for example
# the floppy device.
#
# examples:
#
#   /home/mycure/floppy.img
#   /root/hard-drive.img
#   etc..
#

_IMAGE_			:=		/home/mycure/mycure.img

#
# _VERBOSE_
#
# filled whether the user wants to debug or not.
#
# the user can for example set this variable to: 2> /dev/null > /dev/null
# to avoid mass output.
#
# examples:
#
#   2> /dev/null > /dev/null
#   > /dev/null
#   etc..
#

_VERBOSE_		:=		

#
# _CHECK_LO_
#
# you should override this variable to disable active debuging.
#

override _CHECK_LO_	:=		

#
# FEATURES
#
# you can append information or redefine entire variables like this.
#

_CFLAGS_		+=		$(_C_FLAGS_)			\
					$(_KANETON_FLAGS_)

_LDFLAGS_		+=		$(_LD_FLAGS_)			

_CPPFLAGS_		?=		$(_CPP_FLAGS_)			

ifneq ($(_MAKE_FLAGS_),)
  _MAKEFLAGS_		+=		$(_MAKE_FLAGS_)			
endif

override _MAKE_		:=		make
