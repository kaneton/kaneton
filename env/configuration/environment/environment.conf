#
# ---------- header -----------------------------------------------------------
#
# project       kaneton
#
# license       kaneton
#
# file          /home/mycure/kaneton/env/configuration/environment/environment.conf
#
# created       julien quintard   [mon dec 11 10:39:11 2006]
# updated       julien quintard   [mon dec 11 10:56:00 2006]
#

#
# ---------- sections ---------------------------------------------------------
#

[machines]

#
# ---------- variables --------------------------------------------------------
#

#
# _DISPLAY_
#
display
{
  [variable] _DISPLAY_

  [type] choice

  [input] ${_USER_CONF_}
  [output] ${_USER_CONF_}

  [choice 1] colored		::		color
  [choice 2] non-colored	::		non-color



  [description]

  This variable specifies whether the display
  of messages must be colored.
}



#
# _EXPORT_
#
distribution-name
{
  [variable] _EXPORT_

  [type] input

  [input] ${_USER_CONF_}
  [output] ${_USER_CONF_}



  [description]

  This variable specifies the name of the
  export kaneton distribution generated
  by the following command:

    $> make export

  A pretty good name should be 'kaneton'.
}



#
# _HIDDEN_
#
distribution-hidden
{
  [variable] _HIDDEN_

  [type] input

  [input] ${_USER_CONF_}
  [output] ${_USER_CONF_}



  [description]

  This variable specifies the directories
  to hide from the exported distribution.

  For example, it is likely you do not want
  the view/ directory to be included in the
  exported distribution so that everybody
  could see the kaneton private documents.

  Be careful to set *only* relative path
  and *never* makefiles paths or absolute
  paths like ${_CONF_DIR}.

  Below a list of good and bad ideas for
  this variable.

  Good ideas:

     view/ cheat/ export/

  Bad ideas:

     ${_VIEW_DIR_} ${_KANETON_DIR_}
}



#
# _FILTER_
#
cheat-filter
{
  [variable] _FILTER_

  [type] input

  [input] ${_USER_CONF_}
  [output] ${_USER_CONF_}



  [description]

  This variable is used to exclude some files
  and directories from the kaneton cheat
  detection tool.

  If you are not using kaneton as material for
  operating system courses, then this variable
  is useless.

  Otherwise, you should set the variable to
  every files or directory the cheat detection
  tool should not process.

  For example if, as a teacher, you provide
  students the libs/ directory then you should
  set 'libs/' in this variable to ensure there
  will be no cheat detected in this directory.
}



#
# _TRANSCRIPTS_CMD_
#
transcripts-command
{
  [variable] _TRANSCRIPTS_CMD_

  [type] input

  [input] ${_USER_CONF_}
  [output] ${_USER_CONF_}



  [description]

  The transcripts are used to capture shell
  sessions to make, for example, presentations
  of the possibilites of the kaneton microkernel.

  This variable specifies the command to launch
  when recording a session.

  The common variable is a shell binary like:

     /bin/bash
     /bin/zsh
     etc..
}



#
# _TEST_
#
test-suite
{
  [variable] _TEST_

  [type] choice

  [input] ${_USER_CONF_}
  [output] ${_USER_CONF_}

  [choice 1] enable		::		enable
  [choice 2] disable		::		disable



  [description]

  This variable indicates if the kaneton microkernel
  must be compiled with test suite enabled.
}



#
# _VERBOSE_
#
verbose
{
  [variable] _VERBOSE_

  [type] input

  [input] ${_USER_CONF_}
  [output] ${_USER_CONF_}



  [description]

  This variable is appended to many commands launched
  by the kaneton environment.

  If you do not want the debugging messages of the
  development environment to be printed, then you
  should probably set something like this:

     2>/dev/null >/dev/null
     >/dev/null
     etc..

  If you do not care, just leave this variable empty.
}
