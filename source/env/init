#!/bin/sh
## copyright quintard julien
## 
## kaneton
## 
## init
## 
## path          /home/mycure/data/research/projects/kaneton/source
## 
## made by mycure
##         quintard julien   [quinta_j@epita.fr]
## 
## started on    Fri Feb 11 02:58:21 2005   mycure
## last update   Fri May 27 10:31:58 2005   mycure
##

# INFORMATIONS
#
# this script has to be run in its directory: src/env/
# or with "make init" in the src/ directory



# CONFIGURATION FILE PATH
#
# the configuration file
CONF="../conf/"$USER"/"$USER".conf"



# CONFIGURATION FILE VARIABLES
#
# default globals
ENVIRONMENT="unknown"
ARCHITECTURE="unknwon"



# INSTALL SPECIFIC VARIABLES
#
# generic names for this script
COMMON_MK=".common.mk"
KANETON_MK=".kaneton.mk"



# READ CONFIGURATION FILE
#
# function used to read the configuration file and to load
# important variables
read_kaneton_conf()
{
  # env
  ENVIRONMENT=`cat $CONF | grep -E "^ENVIRONMENT = .*$" | cut -b 15-`

  # architecture
  ARCHITECTURE=`cat $CONF | grep -E "^ARCHITECTURE = .*$" | cut -b 16-`
}



# GENERIC OPERATING SYSTEMS
#
# this function installs the development environment for generic operating
# systems if you have an exotic operating system, please do not call or/and
# call your own version
init_generic()
{
  # makefile dependencies
  GENERIC_COMMON_MK="env/common/common.mk"
  GENERIC_KANETON_MK="env/"$ENVIRONMENT"/kaneton.mk"

  # links
  print "   installing machine-specific files" "+"
  ln -s -f $GENERIC_KANETON_MK $KANETON_MK

  # sed
  print "   generating makefile dependencies" "+"
  sed s/___kaneton_sed___/$(pwd | sed 's/\//\\\//g')/g $GENERIC_COMMON_MK \
      > $COMMON_MK

  # create the symbolic link for architecture dependencies
  print "   installing links to machine-dependent directories" "+"
  ln -s -f $ARCHITECTURE core/bootloader/arch/machdep
  ln -s -f $ARCHITECTURE core/include/arch/machdep
  ln -s -f $ARCHITECTURE core/kaneton/arch/machdep

  ln -s -f $ARCHITECTURE lds/arch/machdep
}



# EXOTIC OPERATING SYSTEMS
#
# write here each specific init function for exotic operating systems
init_your_arch()
{
  exit -1
}



# USAGE
#
# this function displays the usage but does not exit
usage()
{
  print " usage: init" "!"
}



# WARNING
#
# this function alerts the user, displaying information and asking to continue
warning()
{
  # display information and ask the user to continue or cancel
  print " your current configuration:" "+"
  print "   environment:              $ENVIRONMENT" "+"
  print "   architecture:             $ARCHITECTURE" "+"
  print ""
  print " to cancel press CTRL^C, otherwise press enter" "?"

  NEEDLESS=""
  read NEEDLESS
}



# INIT
#
# this function installs the environment, calling the function(s) depending
# of your operating system
init()
{
  case "$ENVIRONMENT" in
    "linux")
      print " installing linux environment" "+"
      init_generic
      ;;

    "mac")
      print " installing mac environment" "+"
      init_generic
      ;;

    *)
      print " unknown system: $ENVIRONMENT" "!"
      print ""
      print " please check your ENVIRONMENT variable in $CONF" "!"
      print ""
      usage
      print ""
      print " supported systems are:" "!"
      print "      linux" "!"
      print "      mac" "!"
      exit
      ;;
  esac
}



# PRINT A MESSAGE
#
# print a message with a header
print()
{
  msg=$1
  header=$2

  case "$header" in
    "+")
      echo -n -e '\E[;34m'"\033[1m[\033[0m"
      echo -n -e '\E[;32m'"\033[1m+\033[0m"
      echo -n -e '\E[;34m'"\033[1m]\033[0m"
      ;;

    "!")
      echo -n -e '\E[;34m'"\033[1m[\033[0m"
      echo -n -e '\E[;31m'"\033[1m!\033[0m"
      echo -n -e '\E[;34m'"\033[1m]\033[0m"
      ;;

    "?")
      echo -n -e '\E[;34m'"\033[1m[\033[0m"
      echo -n -e '\E[;33m'"\033[1m\033[5m?\033[0m\033[0m"
      echo -n -e '\E[;34m'"\033[1m]\033[0m"
      ;;

    *)
      ;;
  esac

  echo -e "\033[1m$msg\033[0m"
  tput sgr0
}



# ENTRY POINT
#
# entry point of this script

# start of installation

print " installing environment" "+"
print ""

# call the read_kaneton_conf function
read_kaneton_conf

# call the warning function
warning

# go into the src/ directory
cd ..

# install environment
init

# return into the env/ directory
cd env

# end of installation
print " environment installed successfully" "+"
