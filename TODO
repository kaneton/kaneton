------------------------------ buck :: todo -----------------------------------

--
 cswitch: no io bitmap copy when class < 1
 et puis meme ca s'optimise encore : faire un set de i_port a granter,
c'est tjs mieux que 8192 bytes a memcpy.

--

 inet:
  * exporter les ops restants
  * virer les 2 copies de packet inutile
  * t_id et pas pointeurs castes
  * faire une class driver net, avec l'op qui va bien

--
 un truc qui me parait bizarre dans le bootloader: la stack courant
elle est pas mappée explicitement !

--
check/
  - revoir tous les tests bootloader
  - finir message/*
  - task/clone_**, thread/clone_**
  - task/priority_**, thread/priority_**
  - task/state_**
  - deplacer sched/state_** dans thread/state_**
  - thread/give_**
  - interface/**
  - io/**

autre:
 - map_resize, {region,segment}_{split,resize,coalesce}
 - {task,thread}_wait
 - ia32_as_reserve: ajuster les flags G des pte du kas
 - sched_update: optimiser car ca pue
 - set_array_locate : dicho desactivée
 - thread_give: copier la pile dans le nouvel AS ?

---------------------------------- info --------------------------------------

 XXX plus infos dans les ELF

----------------------------- mycure :: todo ----------------------------------

--[kayou]
  etudier RBAC pour la security des utilisateurs et programmes dans l'OS.
  ce n'est pas lie au kernel mais a l'OS cette fois.

--
 systeme de messagerie: Nuntion calcule la taille max d'un message * la taille
 de la queue max = ceil(S)

 on demande une autorisation de comm avec un process. si c'est accepte on
 mappe ceil(S) octets de son AS et on copie les messages direct dans son
 AS.

XXX dev-env kayou

XXX rajouter les sujets EPITA: security, POSIX etc.
XXX libc si c'est GPL on l'a surement dans le cul :( both kaneton et kayou

