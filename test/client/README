#
# ---------- header -----------------------------------------------------------
#
# project       kaneton
#
# license       kaneton
#
# file          /home/mycure/kaneton/test/client/README
#
# created       julien quintard   [tue nov  2 05:48:57 2010]
# updated       julien quintard   [thu feb 10 11:17:07 2011]
#

The client script provides the user the possibility to request actions
from the test server.

  $> cd ~/kaneton/test/client/
  $~/kaneton/test/client> make
  [!] usage: client.py [command]

  [!] commands:
  [!]   retest-[identifier]
  [!]   information
  [!]   test-[environment]::[suite]
  [!]   submit-[stage]
  $~/kaneton/test/client> 

#
# ---------- information ------------------------------------------------------
#

The 'information' command returns information on the user account including
the number of tests consumed, the number of tests left etc.

The example below illustrates this command.

  $~/kaneton/test/client> make information
  [+] configuration:
  [+]   server:                 https://test.opaak.org:8421
  [+]   capability:             /data/mycure/repositories/kaneton/environment/profile/user/julien.quintard/julien.quintard.cap
  [+]   platform:               ibm-pc
  [+]   architecture:           ia32/educational

  [+] information:
  [+]   profile:
  [+]     attributes:
  [+]     identifier:           julien.quintard
  [+]     type:                 contributor
  [+]     members:
  [+]       name:               Julien Quintard
  [+]       email:              julien.quintard@gmail.com
  [+]   suites:
  [+]     k3:                   This test suite contains tests related to the execution.
  [+]     k2:                   This test suite focuses on the memory management.
  [+]     k1:                   This test suite focuses on the event processing.
  [+]     bugs:                 This suite contains the tests which fail on the official kaneton implementation.
  [+]     kaneton:              This test suite triggers all the tests.
  [+]   stages:
  [+]     k3:                   This stage evaluates the kaneton's execution functionalities.
  [+]     k2:                   This stage evaluates the kaneton's memory management.
  [+]     k1:                   This stage evaluates the kaneton's event procesing capabilities.
  [+]     k0:                   This stage focuses on the assembly language and the boot process through BIOS services.
  [+]   environments:
  [+]     xen:                  The 'xen' environment is used to thoroughly test a kaneton implementation in a Xen hardware-assisted virtual machine.
  [+]     qemu:                 The 'qemu' environment is used to test a kaneton implementation through the QEMU processor emulator.
  [+]   database:
  [+]     quotas:
  [+]       xen:
  [+]         k3:               -1
  [+]         k2:               -1
  [+]         k1:               -1
  [+]         bugs:             -1
  [+]         kaneton:          -1
  [+]       qemu:
  [+]         ibm-pc.ia32/educational:
  [+]           k3:             -1
  [+]           k2:             -1
  [+]           k1:             -1
  [+]           bugs:           -1
  [+]           kaneton:        -1
  [+]     reports:
  [+]       xen:
  [+]         ibm-pc.ia32/educational:
  [+]           k3:
  [+]           k2:
  [+]           k1:
  [+]           bugs:
  [+]           kaneton:
  [+]       qemu:
  [+]         ibm-pc.ia32/educational:
  [+]           k3:
  [+]           k2:
  [+]           k1:
  [+]           bugs:
  [+]           kaneton:
  $~/kaneton/test/client> 

#
# ---------- test -------------------------------------------------------------
#

The 'test' command issues a request for a test suite to be run in the given
environment so that to stress the current kaneton implementation.

The syntax for this command is test-[environment]::[suite] where [suite]
can be any of the 'k1', 'k2', 'k3' etc. stages while [environment] can
be 'xen' or 'qemu'. For more information regarding the available suites,
stages, environments etc., please refer to the 'information' command.

  $~/kaneton/test/client> make test-xen::k1
  [+] configuration:
  [+]   server:                 https://test.opaak.org:8421
  [+]   capability:             /data/mycure/repositories/kaneton/environment/profile/user/julien.quintard/julien.quintard.cap
  [+]   platform:               ibm-pc
  [+]   architecture:           ia32/educational

  [+] generating the kaneton snapshot
  [+] loading the kaneton snapshot
  [+] requesting the server
  [+] the snapshot has been scheduled for testing under the identifier: 20110210:105955
  $~/kaneton/test/client>

#
# ---------- submit -----------------------------------------------------------
#

Finally, the 'submit' command enables students to definitely submit a
kaneton implementation so that their work gets evaluated afterwards according
to a specific stage.

The syntax for this command is submit-[stage].

  $~/kaneton/test/client> make submit-k3
  [+] configuration:
  [+]   server:                 https://test.opaak.org:8421
  [+]   capability:             /data/mycure/repositories/kaneton/environment/profile/user/julien.quintard/julien.quintard.cap
  [+]   platform:               ibm-pc
  [+]   architecture:           ia32/educational

  [+] generating the kaneton snapshot
  [+] loading the kaneton snapshot
  [+] requesting the server
  [+] the snapshot has been submitted successfully
  $~/kaneton/test/client> 

#
# ---------- retest -----------------------------------------------------------
#

The 'retest' command provides the administrator the possibility to re-launch
the test suite according to the given identifier. This command is useful should
an unexpected error occur.

The syntax for this command is retest-[identifier].

  $~/kaneton/test/client> make retest-20110210:105955
  [+] configuration:
  [+]   server:                 https://test.opaak.org:8421
  [+]   capability:             /data/mycure/repositories/kaneton/environment/profile/user/julien.quintard/julien.quintard.cap
  [+]   platform:               ibm-pc
  [+]   architecture:           ia32/educational

  [+] requesting the server
  [+] the snapshot has been re-tested successfully
  $~/kaneton/test/client> 
