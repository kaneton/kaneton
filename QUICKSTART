 QUICKSTART for kaneton
------------------------

This   document  is   a  quickstart   guide  to   kaneton  development
environment,  introducing first  step  after getting  the tarball  and
describing how to quickly get in with development.


 Creating a profile
--------------------

Once you got the tarball, you have to create a profile with your name.
This  profile must  be  placed in  env/users/  and can  be created  as
following:

$ cd env/users
$ cp -R student florent.chichery


 Setting up the environment
----------------------------

You have to setup two environment variables:

 - KANETON_USER: which must be set to your profile's name
   eg: KANETON_USER=florent.chichery

 - KANETON_MACHINE:  which  must  be  set  to  a  profile  defined  in
   env/machines.
   eg: KANETON_MACHINE=unix

Additionnaly, you  should override the KANETON_SHELL  variable if your
bash program is not located in /bin.


 Customizing the profile
-------------------------

This is a very very short summary. More information about build system
will be provided during the course.

Here you  will only find  a good way  to tell the makefiles  and shell
scripts using other binaries than default one.

Let's take  an example.  Florent C.  has multiple gcc  binaries on his
computer, and  he wants to  tell kaneton build  system to use  the one
named  "gcc-chiche". So  Florent  edits the  env/machines/machine.conf
file and writes _CC_ := gcc-chiche.

But when he commits his changes, Nicolas and JoÃ«l (Florent classmates)
also have  the compilation system  using "gcc-chiche", which  does not
exist on their machine.

So, keep in mind that you have created a user profile, and it is there
to solve this kind of problems !

To make only  Florent using "gcc-chiche" as his  compiler, he must use
the user.conf file and add the following line:

override _CC_	:=	gcc-chiche

As other students using their own profiles, this change will only take
effect on Florent configuration.


 Configuring your emacs
------------------------

kaneton developers must use an auto-generated header on all files.

The emacs lisp file for this  header can be found in tools/emacs. Just
paste the content of the file in your own .emacs.

You will have to define two more variables in your environment:

 - EC_LICENCE: must be set to "kaneton licence"
 - EC_DEVELOPER: muse be set to your name and first name. You MUST NOT
   use nicknames.
     bad:  EC_DEVELOPER="chiche"
     good: EC_DEVELOPER="florent chichery"


 Building and testing your changes
-----------------------------------

  * building

To build kaneton, you must first call make with the "init" rule:

$ make init

This will set  variables in makefiles and shells  to your user-defined
profile variables. Once this step  accomplished, you will only have to
call this rule again after a "clean".

To compile the kernel and bootloader, just type:

$ make

The first time, you have to build the floppy image:

$ make build

To install the kernel on a disk image of disk drive, type:

$ make install

The image is ready (see your user.conf for more information).


  * Testing with bochs

A   sample   configuration   file   for   bochs  can   be   found   in
env/users/student/.bochsrc.


  * Testing with QEMU

Just run qemu as follow:

$ qemu -fda kaneton.img
